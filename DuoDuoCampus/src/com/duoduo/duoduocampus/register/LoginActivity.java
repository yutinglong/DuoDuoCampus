package com.duoduo.duoduocampus.register;import java.util.ArrayList;import java.util.List;import android.content.Context;import android.content.Intent;import android.os.Bundle;import android.support.v4.view.ViewPager.OnPageChangeListener;import android.view.View;import android.view.Window;import android.view.View.OnClickListener;import com.duoduo.duoduocampus.BaseFragment;import com.duoduo.duoduocampus.DuoDuoPrefences;import com.duoduo.duoduocampus.R;import com.duoduo.duoduocampus.activity.BaseActivity;import com.duoduo.duoduocampus.adapter.FragmentViewPagerAdapter;import com.duoduo.duoduocampus.utils.DisplayUtil;import com.duoduo.duoduocampus.views.HomeTabView;import com.duoduo.duoduocampus.views.HomeTabView.TabIndicator;import com.duoduo.duoduocampus.views.MyViewPager;public class LoginActivity extends BaseActivity implements OnClickListener,		OnPageChangeListener {	private HomeTabView tabView;	private List<BaseFragment> fragments = new ArrayList<BaseFragment>();	private LoginFragment mLoginFragment;	private RegisterFragment mRegisterFragment;	private MyViewPager viewPager;	private List<MyIndicator> titleList = new ArrayList<MyIndicator>();	public static boolean immediate;	public static LoginListener mLoginListener;	public static interface LoginListener {		public void onLoginSuccess();	}	public static void needLogin(Context context, Bundle extras,			LoginListener loginListener) {		if (DuoDuoPrefences.isLogin(context)) {			if (loginListener != null) {				loginListener.onLoginSuccess();			}		} else {			DisplayUtil.hideSolftInput(context, null);			mLoginListener = loginListener;			Intent intent = new Intent(context, LoginActivity.class);			intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);			if (extras != null) {				intent.putExtras(extras);			}			context.startActivity(intent);		}	}	@Override	protected void onCreate(Bundle arg0) {		super.onCreate(arg0);		requestWindowFeature(Window.FEATURE_NO_TITLE);				setContentView(R.layout.fragment_login_register_layout);		initUI();	}	@Override	protected void onDestroy() {		super.onDestroy();		if (DuoDuoPrefences.isLogin(getApplicationContext())) {			if (mLoginListener != null) {				LoginActivity.mLoginListener.onLoginSuccess();			}		}		LoginActivity.mLoginListener = null;	}	private void initUI() {		hideSoftInputOutsideEditText();		tabView = (HomeTabView) findViewById(R.id.home_tab);		MyIndicator login = new MyIndicator(getString(R.string.login_title));		titleList.add(login);		MyIndicator register = new MyIndicator(				getString(R.string.login_register));		titleList.add(register);		tabView.notifyPageCountChanged(0, titleList);		tabView.setOnIndicatorClick(new HomeTabView.OnIndicatorClick() {			@Override			public void onIndicatorClick(int index, View view) {				viewPager.setCurrentItem(index);			}		});		viewPager = (MyViewPager) findViewById(R.id.viewpager);		mLoginFragment = new LoginFragment();		fragments.add(mLoginFragment);		mRegisterFragment = new RegisterFragment();		fragments.add(mRegisterFragment);		FragmentViewPagerAdapter adapter = new FragmentViewPagerAdapter(				getSupportFragmentManager(), fragments);		adapter.setCurrentPosition(0);		viewPager.setAdapter(adapter);		viewPager.setOnPageChangeListener(this);		if ("register".equals(getIntent().getStringExtra("type"))) {			toRegisterPanel(true);		} else {			toLoginPanel(false);		}	}	@Override	protected void onStart() {		super.onStart();	}	/**	 * 切换到登录	 */	public void toLoginPanel(boolean smoothScroll) {		viewPager.setCurrentItem(0, smoothScroll);	}	/**	 * 去注册页	 */	public void toRegisterPanel(boolean smoothScroll) {		viewPager.setCurrentItem(1, smoothScroll);	}	@Override	public void onPageScrollStateChanged(int arg0) {		// TODO Auto-generated method stub	}	@Override	public void onPageScrolled(int arg0, float arg1, int arg2) {		// TODO Auto-generated method stub	}	@Override	public void onPageSelected(int arg0) {		tabView.onPageSelected(arg0);		if (arg0 == 0) {// 切换到登录页面了		} else if (arg0 == 1) {// 切换到注册页			if (mRegisterFragment != null) {				mRegisterFragment.show();			}		}	}	@Override	public void onClick(View v) {		BaseFragment fragment = fragments.get(viewPager.getCurrentItem());		fragment.onClick(v);	}	@Override	public void onBackPressed() {		BaseFragment fragment = fragments.get(viewPager.getCurrentItem());		fragment.onBackPressed();	}	private class MyIndicator implements TabIndicator {		private String name;		public MyIndicator(String name) {			this.name = name;		}		@Override		public String getName() {			return name;		}	}	@Override	protected void onActivityResult(int requestCode, int resultCode, Intent data) {		super.onActivityResult(requestCode, resultCode, data);		if (mLoginFragment != null) {			mLoginFragment.onActivityResult(requestCode, resultCode, data);		}	}}